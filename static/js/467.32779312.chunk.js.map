{"version":3,"file":"static/js/467.32779312.chunk.js","mappings":"qOAoCA,EA/BgB,WAKZ,OACI,iBAAKA,UAAU,UAAf,WACI,iBAAKA,UAAU,yBAAf,WACI,eAAGA,UAAU,iBAAb,eACK,gCADL,QAGA,eAAGA,UAAU,gBAAb,mBACS,wCADT,MACiC,kBADjC,wEAIA,iBAAKA,UAAU,gBAAf,WACI,SAAC,KAAD,CAAMC,GAAG,IAAT,UACI,mBAAQD,UAAU,sBAAlB,UACI,gBAAKA,UAAU,QAAf,oCAGR,mBAAQE,QApBH,WACjBC,OAAOC,QAAQC,MAClB,EAkB8CL,UAAU,2BAAzC,UACQ,gBAAKA,UAAU,QAAf,4CAIhB,gBAAKA,UAAU,yBAAyBM,IAAKC,EAAKC,IAAK,WAGlE,C,sJCqBKC,EAAO,SAACC,GACV,MAAyEA,EAAMC,MAAxEC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,UAAWC,EAAtC,EAAsCA,UAAWC,EAAjD,EAAiDA,SAAUC,EAA3D,EAA2DA,MAAOC,EAAlE,EAAkEA,IAElE,OACI,qBAASlB,UAAU,eAAnB,WACI,eAAIA,UAAU,kBAAd,0CACA,gBAAKM,IAAKS,EAAWP,IAAKI,EAAOZ,UAAU,uBAC3C,iBAAKA,UAAU,qBAAf,WACI,eAAIA,UAAU,qBAAd,SAAoCY,KACpC,cAAGZ,UAAU,sBAAb,SAAoCa,KACpC,cAAGb,UAAU,sBAAb,SAAoCc,KACpC,eAAGd,UAAU,sBAAb,uBAA8CgB,MAC9C,gBAAKhB,UAAU,sBAAf,SAAsCiB,KACtC,cAAGE,KAAMD,EAAKlB,UAAU,sBAAxB,UACQ,gBAAKA,UAAU,QAAf,qCAGZ,SAAC,KAAD,CAAMC,GAAG,UAAUD,UAAU,qBAA7B,2BAGX,EAED,EAlEwB,WACpB,OAAmCoB,EAAAA,EAAAA,KAA5BC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,SAEvB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOb,EAAP,KAAcc,EAAd,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,SAGRE,EAAAA,EAAAA,YAAU,WACNC,GACH,GAAE,IAGH,IAAMA,EAAc,WAChBR,EAASK,GACII,MAAK,SAAAC,GACF,IAAOC,EAAkBD,EAAlBC,IAAKC,EAAaF,EAAbE,UACM,MAAdA,EACAR,GAAS,IACDQ,GACRV,EAASS,GAGTP,GAAS,GAEhB,GAChB,EAEKS,EAAcf,GAAWC,IAAUX,EAAiC,MAAxB,SAACF,EAAD,CAAME,MAAOA,IACzD0B,EAAUhB,GAAU,SAACiB,EAAA,EAAD,IAAa,KACjCC,EAAejB,IAAUI,GAAQ,SAACc,EAAA,EAAD,IAAkB,KACnDC,EAAUnB,GAASI,GAAQ,SAAC,UAAD,IAAa,KAE9C,OACI,gCACKW,EACAE,EACAE,EACAL,IAGZ,C","sources":["components/pages/404/404.js","components/pages/SingleComicPage/SingleComicPage.js"],"sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\nimport './404.scss';\r\nimport img from './404.jpg';\r\n\r\nconst Page404 = () => {\r\n    const goToPrevPage = () => {\r\n        window.history.back();\r\n    }\r\n\r\n    return (\r\n        <div className=\"page404\">\r\n            <div className=\"page404__text__wrapper\">\r\n                <p className=\"page404__title\">\r\n                    4<span>0</span>4\r\n                </p>\r\n                <p className=\"page404__text\">\r\n                    Page <span>not found</span>. <br/>\r\n                    Ð¡heck the spelling of the address or return to the main page\r\n                </p>\r\n                <div className=\"page404__btns\">\r\n                    <Link to='/'>\r\n                        <button className=\"button button__main\">\r\n                            <div className=\"inner\">Back to main page</div>\r\n                        </button>\r\n                    </Link>\r\n                    <button onClick={goToPrevPage} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Back to previous page</div>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <img className=\"page404__img heartBeat\" src={img} alt={'404.'} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Page404;","import { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nimport useMarvelService from '../../../services/MarvelService';\r\nimport Spinner from '../../spinner/Spinner';\r\nimport ErrorMessage from '../../errorMessage/ErrorMessage';\r\n\r\nimport './SingleComicPage.scss';\r\nimport Page404 from '../404/404';\r\n\r\n\r\nconst SingleComicPage = () => {\r\n    const {loading, error, getComic} = useMarvelService();\r\n\r\n    const [comic, setComic] = useState(null);\r\n    const [is404, setIs404] = useState(null);\r\n\r\n    const { comicId } = useParams();\r\n\r\n\r\n    useEffect(() => { \r\n        updateComic();\r\n    }, []);\r\n\r\n\r\n    const updateComic = () => {\r\n        getComic(comicId)\r\n                    .then(result => {\r\n                        const {res, errorCode} = result;\r\n                        if (errorCode === 404) {\r\n                            setIs404(true);\r\n                        } else if (!errorCode) {\r\n                            setComic(res);\r\n                            setIs404(false);\r\n                        } else {\r\n                            setIs404(false);\r\n                        }\r\n                    });\r\n    }\r\n\r\n    const comicItem = !(loading || error || !comic) ? <View comic={comic}/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const errorMessage = error && !is404 ? <ErrorMessage/> : null;\r\n    const page404 = error && is404 ? <Page404/> : null;\r\n\r\n    return (\r\n        <>\r\n            {spinner}\r\n            {errorMessage}\r\n            {page404}\r\n            {comicItem}\r\n        </>\r\n    );\r\n};\r\n\r\nconst View = (props) => {\r\n    const {title, description, pageCount, thumbnail, language, price, url} = props.comic;\r\n\r\n    return (\r\n        <section className=\"single-comic\">\r\n            <h2 className=\"visually-hidden\">Information about the comic</h2>\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">Language: {language}</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n                <a href={url} className=\"button button__main\">\r\n                        <div className=\"inner\">Marvel Comic Page</div>\r\n                </a>\r\n            </div>\r\n            <Link to='/comics' className=\"single-comic__back\">Back to all</Link>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SingleComicPage;"],"names":["className","to","onClick","window","history","back","src","img","alt","View","props","comic","title","description","pageCount","thumbnail","language","price","url","href","useMarvelService","loading","error","getComic","useState","setComic","is404","setIs404","comicId","useParams","useEffect","updateComic","then","result","res","errorCode","comicItem","spinner","Spinner","errorMessage","ErrorMessage","page404"],"sourceRoot":""}